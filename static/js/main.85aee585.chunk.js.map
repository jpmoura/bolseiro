{"version":3,"sources":["reportWebVitals.ts","components/molecules/PaymentDocumentCard.tsx","services/PortalDaTransparenciaService.ts","components/atoms/CircularProgressIcon.tsx","components/organisms/ScholarshipForm.tsx","components/organisms/ApplicationBar.tsx","components/organisms/Footer.tsx","components/templates/DefaultTemplate.tsx","components/pages/IndexPage.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","root","marginTop","spacing","scholarshipValue","color","palette","success","main","fontWeight","scholarshipRecipient","textTransform","scholarshipInstitution","PaymentDocumentCard","paymentDocument","classes","paymentDocumentPhase","fase","toLowerCase","Card","className","raised","CardHeader","title","documentoResumido","subheader","data","CardContent","Typography","valor","variant","nomeFavorecido","orgao","CardActions","Button","size","target","href","documento","Divider","PortalDaTransparenciaService","corsByPassServer","date","cpf","momentDate","moment","lastDayOfMonth","daysInMonth","year","month","format","strippedCpf","cpfValidator","strip","axios","get","this","response","contents","CircularProgressIcon","CircularProgress","locale","lastDateOfCurrentMonth","endOf","validationSchema","Yup","required","test","value","isValid","max","toDate","ScholarshipForm","handleSubmit","portalDaTransparenciaService","useState","openDateDialog","openSnackbar","undefined","state","setState","formik","useFormik","initialValues","Date","validateOnChange","onSubmit","inputValues","a","checkScholarship","error","Message","alertSeverity","recordsTotal","handleCloseDateDialog","Container","Grid","container","justify","item","xs","mask","values","onChange","handleChange","TextField","name","label","placeholder","fullWidth","touched","errors","helperText","utils","MomentUtils","margin","openTo","cancelLabel","views","open","disableFuture","autoOk","setFieldValue","handleDateChange","onClick","onAccept","onClose","resetForm","disabled","isSubmitting","startIcon","type","Snackbar","Alert","severity","action","IconButton","fontSize","pluralNoun","formattedDate","getAlertMessage","marginBottom","offset","mixins","toolbar","ApplicationBar","AppBar","Toolbar","icon","faPiggyBank","bottom","top","Footer","position","faLinkedin","faGithub","DefaultTemplate","children","createMuiTheme","StylesProvider","injectFirst","ThemeProvider","defaultProps","IndexPage","paymentDocuments","setPaymentDocuments","paymentDocumentCards","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yJAgBeA,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+ECLRQ,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJC,UAAWF,EAAMG,QAAQ,IAE3BC,iBAAkB,CAChBC,MAAOL,EAAMM,QAAQC,QAAQC,KAC7BC,WAAY,QAEdC,qBAAsB,CACpBC,cAAe,cAEjBC,uBAAwB,CACtBH,WAAY,YAQD,SAASI,EAAT,GAA0F,IAA3DC,EAA0D,EAA1DA,gBACtCC,EAAUjB,IACVkB,EAA+BF,EAAgBG,KAAKC,cAE1D,OACE,qCACE,eAACC,EAAA,EAAD,CAAMC,UAAWL,EAAQd,KAAMoB,QAAM,EAArC,UACE,cAACC,EAAA,EAAD,CACEC,MAAK,oBAAeT,EAAgBU,mBACpCC,UAAS,aAAQT,EAAR,mBAAuCF,EAAgBY,QAElE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,0BAEG,IACD,sBAAMR,UAAWL,EAAQX,iBAAzB,qBAAiDU,EAAgBe,SAChE,IAJH,UAOA,uBACA,cAACD,EAAA,EAAD,CAAYR,UAAWL,EAAQL,qBAAsBoB,QAAQ,KAA7D,SACGhB,EAAgBiB,eAAeb,gBAElC,uBACA,eAACU,EAAA,EAAD,6CAEG,IACD,sBAAMR,UAAWL,EAAQH,uBAAzB,SAAkDE,EAAgBkB,cAGtE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEJ,QAAQ,YACRzB,MAAM,UACN8B,KAAK,QACLC,OAAO,SACPC,KAAI,yDAAoDrB,EAApD,YAA4EF,EAAgBwB,WALlG,2BAWJ,cAACC,EAAA,EAAD,O,kRC9DeC,E,iDACFC,iBAAmB,sC,sGAEbC,EAAYC,G,wFAC3BC,EAA4BC,IAAOH,GACnCI,EAAyBF,EAAWG,cACpCC,EAAeJ,EAAWI,OAC1BC,EAAgBL,EAAWM,OAAO,MAClCC,EAAcC,IAAaC,MAAMV,G,SAEhBW,IAAMC,IAAN,UAAgCC,KAAKf,iBAArC,0WAAuZQ,EAAvZ,cAAkaD,EAAla,gBAA8aF,EAA9a,cAAkcG,EAAlc,cAA6cD,EAA7c,oBAA6dG,I,cAA9eM,E,yBAECA,EAAS/B,KAAKgC,U,yHCfV,SAASC,IACtB,OACE,cAACC,EAAA,EAAD,CAAkBzB,KAAK,OAAO9B,MAAM,YCiBxCwC,IAAOgB,OAAO,SAqBd,IAAMC,EAAwCjB,MAASkB,MAAM,SAEvDC,GAAmBC,IAAW,CAClCtB,IAAKsB,MAAaC,SAAS,6BAAuBC,KAAK,aAAc,6BAPvE,SAAoBC,GAClB,QAAOA,GAAQhB,IAAaiB,QAAQD,MAOpC1B,KAAMuB,MAAWC,SAAS,gDAAuCI,IAAIR,EAAuBS,SAAU,uDAGzF,SAASC,GAAT,GAA+E,IAAD,IAAnDC,EAAmD,EAAnDA,aAClCC,EAA6D,IAAIlC,EADoB,EAGjEmC,mBAA+B,CACvDC,gBAAgB,EAChBC,cAAc,EACdpB,cAAUqB,IAN+E,mBAGpFC,EAHoF,KAG7EC,EAH6E,KAQrFC,EAASC,YAAU,CACvBC,cAAe,CACbxC,IAAK,GACLD,KAAM,IAAI0C,MAEZpB,oBACAqB,kBAAkB,EAClBC,SAAS,WAAD,4BAAE,WAAOC,GAAP,eAAAC,EAAA,+EAIWd,EAA6Be,iBAAiBF,EAAY7C,KAAM6C,EAAY5C,KAJvF,OAINc,EAJM,sDAMNA,EAAW,CACTiC,MAAO,KAAEC,QACTjE,KAAM,IARF,OAYRsD,EAAS,2BACJD,GADG,IAENtB,WACAoB,cAAc,KAGhBJ,EAAahB,EAAS/B,MAlBd,yDAAF,mDAAC,KA2CLkE,GAAqC,UAAAb,EAAMtB,gBAAN,eAAgBiC,QAA0C,KAAjC,UAAAX,EAAMtB,gBAAN,eAAgBoC,cAAqB,QAAU,UAoB7GC,EAAwB,WAC5Bd,EAAS,2BACJD,GADG,IAENH,gBAAgB,MAIpB,OACE,eAACmB,EAAA,EAAD,WACE,sBAAMT,SAAUL,EAAOR,aAAvB,SACE,eAACuB,EAAA,EAAD,CAAMC,WAAS,EAAC9F,QAAS,EAAG+F,QAAQ,SAApC,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAAC,IAAD,CACEI,KAAK,iBACLjC,MAAOa,EAAOqB,OAAO3D,IACrB4D,SAAUtB,EAAOuB,aAHnB,SAKG,kBACC,cAACC,EAAA,EAAD,CACEC,KAAK,MACLC,MAAM,MACNC,YAAY,4BACZC,WAAS,EACTzC,MAAOa,EAAOqB,OAAO3D,IACrB+C,MAAOT,EAAO6B,QAAQnE,OAASsC,EAAO8B,OAAOpE,IAC7CqE,WAAY/B,EAAO6B,QAAQnE,KAAOsC,EAAO8B,OAAOpE,aAM1D,cAACqD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAAC,IAAD,CAAyBpC,OAAO,QAAQoD,MAAOC,IAA/C,SACE,cAAC,IAAD,CACER,KAAK,OACLS,OAAO,SACPR,MAAM,wBACNzD,OAAO,UACPkE,OAAO,OACPC,YAAY,WACZC,MAAO,CAAC,OAAQ,SAChBC,KAAMxC,EAAMH,eACZ4C,eAAa,EACbC,QAAM,EACNZ,WAAS,EACTzC,MAAOa,EAAOqB,OAAO5D,KACrBgD,MAAOT,EAAO6B,QAAQpE,QAAUuC,EAAO8B,OAAOrE,KAC9CsE,WAAY/B,EAAO6B,QAAQpE,MAAQuC,EAAO8B,OAAOrE,KACjD6D,SAAU,SAAC7D,GAAD,OA3FD,SAACA,GACxBuC,EAAOyC,cAAc,OAAQhF,GA0FKiF,CAAiBjF,IACrCkF,QA1De,WAC7B5C,EAAS,2BACJD,GADG,IAENH,gBAAgB,MAwDJiD,SAAU/B,EACVgC,QAAShC,UAKjB,cAACE,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACH,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAAC/D,EAAA,EAAD,CAAQJ,QAAQ,YAAY8F,QAjGpB,WAClB3C,EAAO8C,YACP/C,EAAS,2BACJD,GADG,IAENF,cAAc,EACdpB,cAAUqB,KAEZL,OAAaK,IA0F+CkD,WAAY/C,EAAOgD,aAAcC,UAAW,cAAC,IAAD,IAA9F,wBAGJ,cAAClC,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACH,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAAC/D,EAAA,EAAD,CACEJ,QAAQ,YACRqG,KAAK,SACL9H,MAAM,UACN2H,WAAY/C,EAAOgD,aACnBC,UAAWjD,EAAOgD,aAAe,cAACtE,EAAD,IAA2B,cAAC,IAAD,IAL9D,gCAaR,cAACyE,EAAA,EAAD,CACEb,KAAMxC,EAAMF,aADd,SAGE,cAACwD,EAAA,EAAD,CACEC,SAAU1C,EACV9D,QAAQ,SACRyG,OACE,cAACC,EAAA,EAAD,CAAYrG,KAAK,QAAQ9B,MAAM,UAAUuH,QAhH7B,WACpB5C,EAAS,2BACJD,GADG,IAENF,cAAc,MA6GR,SACE,cAAC,IAAD,CAAW4D,SAAS,YAL1B,SAnGkB,WAAe,IAAD,EACpC,IAAI,UAAA1D,EAAMtB,gBAAN,eAAgBoC,eAAgBd,EAAMtB,SAASoC,aAAe,EAAG,CACnE,IAAM6C,EAAqB3D,EAAMtB,SAASoC,aAAe,EAAI,IAAM,GACnE,MAAM,GAAN,OAAUd,EAAMtB,SAASoC,aAAzB,oBAAiD6C,EAAjD,sBAAyEA,GAG3E,IAAMC,EAAwB9F,IAAOoC,EAAOqB,OAAO5D,MAAMQ,OAAO,kBAEhE,MAAM,yCAAN,OAAgD+B,EAAOqB,OAAO3D,IAA9D,eAAwEgG,GAoGjEC,U,yECnNL9I,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJ4I,aAAc7I,EAAMG,QAAQ,IAE9B2I,OAAQ9I,EAAM+I,OAAOC,YAGR,SAASC,KACtB,IAAMlI,EAAUjB,KAChB,OACE,qCACE,cAACoJ,GAAA,EAAD,CAAQ9H,UAAWL,EAAQd,KAA3B,SACE,eAACkJ,GAAA,EAAD,WACE,cAACX,EAAA,EAAD,CAAYnI,MAAM,UAAlB,SACE,cAAC,KAAD,CAAiB+I,KAAMC,SAEzB,cAACzH,EAAA,EAAD,CAAYE,QAAQ,KAApB,2BAKJ,qBAAKV,UAAWL,EAAQ+H,Y,cCrBxBhJ,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJqJ,OAAQ,EACRC,IAAK,QAEPT,OAAQ9I,EAAM+I,OAAOC,YAGR,SAASQ,KACtB,IAAMzI,EAAUjB,KAChB,OACE,qCACE,qBAAKsB,UAAWL,EAAQ+H,SACxB,cAACI,GAAA,EAAD,CAAQ9H,UAAWL,EAAQd,KAAMwJ,SAAS,QAA1C,SACE,cAACN,GAAA,EAAD,UACE,eAACnD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACE,cAACsC,EAAA,EAAD,CAAYnI,MAAM,UAAU+B,OAAO,SAASC,KAAK,oDAAjD,SACE,cAAC,KAAD,CAAiB+G,KAAMM,SAEzB,cAAClB,EAAA,EAAD,CAAYnI,MAAM,UAAU+B,OAAO,SAASC,KAAK,6BAAjD,SACE,cAAC,KAAD,CAAiB+G,KAAMO,mBChBrC,SAASC,GAAT,GAA4E,IAAjDC,EAAgD,EAAhDA,SACnB7J,EAAQ8J,eAEd,OACE,cAACC,GAAA,EAAD,CAAgBC,aAAW,EAA3B,SACE,cAACC,GAAA,EAAD,CAAejK,MAAOA,EAAtB,SACE,eAAC+F,EAAA,EAAD,WACE,cAACkD,GAAD,IACCY,EACD,cAACL,GAAD,WAOVI,GAAgBM,aAAe,CAC7BL,SAAU,MAGGD,UCzBA,SAASO,KAA0B,IAAD,EACCxF,wBAA6CG,GAD9C,mBACxCsF,EADwC,KACtBC,EADsB,KAEzCC,EAAoB,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAkBG,KAAI,SAACzJ,GAAD,OAAsC,cAACD,EAAD,CAA6DC,gBAAiBA,GAApDA,EAAgBU,sBAEnI,OACE,eAAC,GAAD,WACE,cAACgD,GAAD,CAAiBC,aAAc4F,IAC9BC,KCRPE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACP,GAAD,MAEFQ,SAASC,eAAe,SAM1BvL,M","file":"static/js/main.85aee585.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  Button, Card, CardActions, CardContent, CardHeader, Divider, makeStyles, Theme, Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport PaymentDocument from '../../models/PaymentDocument';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    marginTop: theme.spacing(3),\n  },\n  scholarshipValue: {\n    color: theme.palette.success.main,\n    fontWeight: 'bold',\n  },\n  scholarshipRecipient: {\n    textTransform: 'capitalize',\n  },\n  scholarshipInstitution: {\n    fontWeight: 'bold',\n  },\n}));\n\ninterface PaymentDocumentCardProps {\n  paymentDocument: PaymentDocument;\n}\n\nexport default function PaymentDocumentCard({ paymentDocument }: PaymentDocumentCardProps): JSX.Element {\n  const classes = useStyles();\n  const paymentDocumentPhase: string = paymentDocument.fase.toLowerCase();\n\n  return (\n    <>\n      <Card className={classes.root} raised>\n        <CardHeader\n          title={`Documento ${paymentDocument.documentoResumido}`}\n          subheader={`Em ${paymentDocumentPhase} no dia ${paymentDocument.data}`}\n        />\n        <CardContent>\n          <Typography>\n            Pagamento de\n            {' '}\n            <span className={classes.scholarshipValue}>{`R$${paymentDocument.valor}`}</span>\n            {' '}\n            para\n          </Typography>\n          <br />\n          <Typography className={classes.scholarshipRecipient} variant=\"h6\">\n            {paymentDocument.nomeFavorecido.toLowerCase()}\n          </Typography>\n          <br />\n          <Typography>\n            através da instituição\n            {' '}\n            <span className={classes.scholarshipInstitution}>{paymentDocument.orgao}</span>\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            target=\"_blank\"\n            href={`http://www.portaltransparencia.gov.br/despesas/${paymentDocumentPhase}/${paymentDocument.documento}`}\n          >\n            Detalhes\n          </Button>\n        </CardActions>\n      </Card>\n      <Divider />\n    </>\n  );\n}\n","import axios from 'axios';\r\nimport moment from 'moment';\r\nimport { cpf as cpfValidator } from 'cpf-cnpj-validator';\r\nimport PortalDaTransparenciaResponse from '../models/PortalDaTransparenciaResponse';\r\nimport CorsProxyResponse from '../models/CorsProxyResponse';\r\n\r\nexport default class PortalDaTransparenciaService {\r\n  private readonly corsByPassServer = 'https://api.allorigins.win/get?url=';\r\n\r\n  async checkScholarship(date: Date, cpf: string): Promise<PortalDaTransparenciaResponse> {\r\n    const momentDate: moment.Moment = moment(date);\r\n    const lastDayOfMonth: number = momentDate.daysInMonth();\r\n    const year: number = momentDate.year();\r\n    const month: string = momentDate.format('MM');\r\n    const strippedCpf = cpfValidator.strip(cpf);\r\n\r\n    const response = await axios.get<CorsProxyResponse>(`${this.corsByPassServer}http://www.portaltransparencia.gov.br/despesas/favorecido/resultado?paginacaoSimples=true&tamanhoPagina=15&offset=0&direcaoOrdenacao=desc&colunaOrdenacao=valor&colunasSelecionadas=data%2CdocumentoResumido%2ClocalizadorGasto%2Cfase%2Cespecie%2Cfavorecido%2CufFavorecido%2Cvalor%2Cug%2Cuo%2Corgao%2CorgaoSuperior%2Cgrupo%2Celemento%2Cmodalidade&de=01%2F${month}%2F${year}&ate=${lastDayOfMonth}%2F${month}%2F${year}&cpfCnpj=${strippedCpf}`);\r\n\r\n    return response.data.contents;\r\n  }\r\n}\r\n","import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nexport default function CircularProgressIcon(): JSX.Element {\n  return (\n    <CircularProgress size=\"18px\" color=\"inherit\" />\n  );\n}\n","import 'moment/locale/pt-br';\nimport {\n  Button, Container, Grid, IconButton, Snackbar, TextField,\n} from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { cpf as cpfValidator } from 'cpf-cnpj-validator';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport moment from 'moment';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\nimport SearchIcon from '@material-ui/icons/Search';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert } from '@material-ui/lab';\nimport InputMask from 'react-input-mask';\nimport PortalDaTransparenciaService from '../../services/PortalDaTransparenciaService';\nimport PortalDaTransparenciaResponse from '../../models/PortalDaTransparenciaResponse';\nimport CircularProgressIcon from '../atoms/CircularProgressIcon';\nimport PaymentDocument from '../../models/PaymentDocument';\n\nmoment.locale('pt-br');\n\ninterface SchoolarshipFormInputs {\n  cpf: string,\n  date: Date,\n}\n\ninterface ScholarshipFormState {\n  response?: PortalDaTransparenciaResponse,\n  openSnackbar: boolean,\n  openDateDialog: boolean,\n}\n\ninterface ScholarshipFormProps {\n  handleSubmit: (paymentDocument: Array<PaymentDocument> | undefined) => void;\n}\n\nfunction isCpfValid(value: string | undefined): boolean {\n  return value ? cpfValidator.isValid(value) : false;\n}\n\nconst lastDateOfCurrentMonth: moment.Moment = moment().endOf('month');\n\nconst validationSchema = Yup.object({\n  cpf: Yup.string().required('O CPF é obrigatório').test('isCpfValid', 'CPF não é válido', isCpfValid),\n  date: Yup.date().required('Mês e ano da bolsa são obrigatórios').max(lastDateOfCurrentMonth.toDate(), 'Você não pode pesquisar por datas no futuro'),\n});\n\nexport default function ScholarshipForm({ handleSubmit }: ScholarshipFormProps): JSX.Element {\n  const portalDaTransparenciaService: PortalDaTransparenciaService = new PortalDaTransparenciaService();\n\n  const [state, setState] = useState<ScholarshipFormState>({\n    openDateDialog: false,\n    openSnackbar: false,\n    response: undefined,\n  });\n  const formik = useFormik({\n    initialValues: {\n      cpf: '',\n      date: new Date(),\n    } as SchoolarshipFormInputs,\n    validationSchema,\n    validateOnChange: false,\n    onSubmit: async (inputValues: SchoolarshipFormInputs) => {\n      let response: PortalDaTransparenciaResponse;\n\n      try {\n        response = await portalDaTransparenciaService.checkScholarship(inputValues.date, inputValues.cpf);\n      } catch (e) {\n        response = {\n          error: e.Message,\n          data: [],\n        } as PortalDaTransparenciaResponse;\n      }\n\n      setState({\n        ...state,\n        response,\n        openSnackbar: true,\n      });\n\n      handleSubmit(response.data);\n    },\n  });\n\n  const handleDateChange = (date: MaterialUiPickersDate) => {\n    formik.setFieldValue('date', date);\n  };\n\n  const handleClear = () => {\n    formik.resetForm();\n    setState({\n      ...state,\n      openSnackbar: false,\n      response: undefined,\n    });\n    handleSubmit(undefined);\n  };\n\n  const closeSnackbar = (): void => {\n    setState({\n      ...state,\n      openSnackbar: false,\n    });\n  };\n\n  const alertSeverity: 'error' | 'success' = state.response?.error || state.response?.recordsTotal === 0 ? 'error' : 'success';\n\n  const getAlertMessage = (): string => {\n    if (state.response?.recordsTotal && state.response.recordsTotal > 0) {\n      const pluralNoun: string = state.response.recordsTotal > 1 ? 's' : '';\n      return `${state.response.recordsTotal} registro${pluralNoun} encontrado${pluralNoun}`;\n    }\n\n    const formattedDate: string = moment(formik.values.date).format('MMMM [de] YYYY');\n\n    return `Nenhum registro encontrado para o CPF ${formik.values.cpf} em ${formattedDate}`;\n  };\n\n  const handleClickOnDateInput = (): void => {\n    setState({\n      ...state,\n      openDateDialog: true,\n    });\n  };\n\n  const handleCloseDateDialog = (): void => {\n    setState({\n      ...state,\n      openDateDialog: false,\n    });\n  };\n\n  return (\n    <Container>\n      <form onSubmit={formik.handleSubmit}>\n        <Grid container spacing={2} justify=\"center\">\n          <Grid item xs={12}>\n            <Grid container>\n              <InputMask\n                mask=\"999.999.999-99\"\n                value={formik.values.cpf}\n                onChange={formik.handleChange}\n              >\n                {() => (\n                  <TextField\n                    name=\"cpf\"\n                    label=\"CPF\"\n                    placeholder=\"Informe o CPF do bolsista\"\n                    fullWidth\n                    value={formik.values.cpf}\n                    error={formik.touched.cpf && !!formik.errors.cpf}\n                    helperText={formik.touched.cpf && formik.errors.cpf}\n                  />\n                )}\n              </InputMask>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container>\n              <MuiPickersUtilsProvider locale=\"pt-br\" utils={MomentUtils}>\n                <KeyboardDatePicker\n                  name=\"date\"\n                  margin=\"normal\"\n                  label=\"Mês e ano da bolsa\"\n                  format=\"MM/yyyy\"\n                  openTo=\"year\"\n                  cancelLabel=\"Cancelar\"\n                  views={['year', 'month']}\n                  open={state.openDateDialog}\n                  disableFuture\n                  autoOk\n                  fullWidth\n                  value={formik.values.date}\n                  error={formik.touched.date && !!formik.errors.date}\n                  helperText={formik.touched.date && formik.errors.date}\n                  onChange={(date) => handleDateChange(date)}\n                  onClick={handleClickOnDateInput}\n                  onAccept={handleCloseDateDialog}\n                  onClose={handleCloseDateDialog}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container>\n              <Button variant=\"contained\" onClick={handleClear} disabled={!!formik.isSubmitting} startIcon={<BackspaceIcon />}>Limpar</Button>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container>\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                color=\"primary\"\n                disabled={!!formik.isSubmitting}\n                startIcon={formik.isSubmitting ? <CircularProgressIcon /> : <SearchIcon />}\n              >\n                Pesquisar\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </form>\n      <Snackbar\n        open={state.openSnackbar}\n      >\n        <Alert\n          severity={alertSeverity}\n          variant=\"filled\"\n          action={(\n            <IconButton size=\"small\" color=\"inherit\" onClick={closeSnackbar}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n        )}\n        >\n          {getAlertMessage()}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n}\n","import React from 'react';\nimport {\n  AppBar, Toolbar, Typography, Theme, makeStyles, IconButton,\n} from '@material-ui/core';\nimport { faPiggyBank } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    marginBottom: theme.spacing(2),\n  },\n  offset: theme.mixins.toolbar,\n}));\n\nexport default function ApplicationBar(): JSX.Element {\n  const classes = useStyles();\n  return (\n    <>\n      <AppBar className={classes.root}>\n        <Toolbar>\n          <IconButton color=\"inherit\">\n            <FontAwesomeIcon icon={faPiggyBank} />\n          </IconButton>\n          <Typography variant=\"h6\">\n            Bolseiro\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.offset} />\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  AppBar, Toolbar, makeStyles, IconButton, Grid, Theme,\n} from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    bottom: 0,\n    top: 'auto',\n  },\n  offset: theme.mixins.toolbar,\n}));\n\nexport default function Footer(): JSX.Element {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.offset} />\n      <AppBar className={classes.root} position=\"fixed\">\n        <Toolbar>\n          <Grid container justify=\"center\">\n            <IconButton color=\"inherit\" target=\"_blank\" href=\"https://www.linkedin.com/in/mourajp/?locale=en_US\">\n              <FontAwesomeIcon icon={faLinkedin} />\n            </IconButton>\n            <IconButton color=\"inherit\" target=\"_blank\" href=\"https://github.com/jpmoura\">\n              <FontAwesomeIcon icon={faGithub} />\n            </IconButton>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n","import {\n  Container, createMuiTheme, StylesProvider, ThemeProvider,\n} from '@material-ui/core';\nimport React from 'react';\nimport ApplicationBar from '../organisms/ApplicationBar';\nimport Footer from '../organisms/Footer';\n\ninterface DefaultInterfaceProps {\n  children?: React.ReactNode\n}\n\nfunction DefaultTemplate({ children }: DefaultInterfaceProps): JSX.Element {\n  const theme = createMuiTheme();\n\n  return (\n    <StylesProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <Container>\n          <ApplicationBar />\n          {children}\n          <Footer />\n        </Container>\n      </ThemeProvider>\n    </StylesProvider>\n  );\n}\n\nDefaultTemplate.defaultProps = {\n  children: null,\n};\n\nexport default DefaultTemplate;\n","import React, { useState } from 'react';\nimport PaymentDocument from '../../models/PaymentDocument';\nimport PaymentDocumentCard from '../molecules/PaymentDocumentCard';\nimport ScholarshipForm from '../organisms/ScholarshipForm';\nimport DefaultTemplate from '../templates/DefaultTemplate';\n\nexport default function IndexPage(): JSX.Element {\n  const [paymentDocuments, setPaymentDocuments] = useState<Array<PaymentDocument> | undefined>(undefined);\n  const paymentDocumentCards = paymentDocuments?.map((paymentDocument: PaymentDocument) => <PaymentDocumentCard key={paymentDocument.documentoResumido} paymentDocument={paymentDocument} />);\n\n  return (\n    <DefaultTemplate>\n      <ScholarshipForm handleSubmit={setPaymentDocuments} />\n      {paymentDocumentCards}\n    </DefaultTemplate>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport IndexPage from './components/pages/IndexPage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <IndexPage />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}